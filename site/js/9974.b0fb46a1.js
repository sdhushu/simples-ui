"use strict";(self.webpackChunksimples_ui=self.webpackChunksimples_ui||[]).push([[9974],{9974:(s,t,d)=>{d.r(t),d.d(t,{default:()=>o});var a=d(6229),e={class:"varlet-site-doc"},c=[(0,a.uE)('<h1>Snackbar 消息条</h1><div class="card"><h3>介绍</h3><p>用于向用户显示快速消息。</p></div><div class="card"><h3>引入</h3><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> { Snackbar } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@varlet/ui&#39;</span>\n\ncreateApp().use(Snackbar)\n</code></pre></div><div class="card"><h3>局部引入</h3><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css">\n<span class="hljs-keyword">import</span> { Snackbar } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@varlet/ui&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">components</span>: {\n    [Snackbar.Component.name]: Snackbar\n  }\n}\n</code></pre></div><div class="card"><h3>组件调用</h3><h4>基本使用</h4><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">block</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = !show&quot;</span>&gt;</span>基本使用<span class="hljs-tag">&lt;/<span class="hljs-name">var-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">var-snackbar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>&gt;</span> 这是一个消息条！！<span class="hljs-tag">&lt;/<span class="hljs-name">var-snackbar</span>&gt;</span>\n</code></pre><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> show = ref(<span class="hljs-literal">false</span>)\n\n    <span class="hljs-keyword">return</span> {\n      show\n    }\n  }\n}\n</code></pre><h4>垂直排列</h4><p>通过<code>vertical</code>属性改变<code>snackbar</code>排列方式，通过<code>自定义插槽</code>创建右边 action。</p><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-snackbar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">:vertical</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n  这是一个消息条！！\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">action</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">var-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = !show&quot;</span>&gt;</span>关闭<span class="hljs-tag">&lt;/<span class="hljs-name">var-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">var-snackbar</span>&gt;</span>\n</code></pre><h4>底部显示</h4><p>通过<code>position</code>属性改变<code>snackbar</code>显示位置。</p><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-snackbar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n  这是一个消息条！！\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">action</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">var-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = false&quot;</span>&gt;</span>关闭<span class="hljs-tag">&lt;/<span class="hljs-name">var-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">var-snackbar</span>&gt;</span>\n</code></pre><h4>显示时长</h4><p>通过<code>duration</code>属性改变<code>snackbar</code>显示时长。</p><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-snackbar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">:duration</span>=<span class="hljs-string">&quot;1000&quot;</span>&gt;</span> 这是一个消息条！！<span class="hljs-tag">&lt;/<span class="hljs-name">var-snackbar</span>&gt;</span>\n</code></pre><h4>禁止穿透点击</h4><p>使用<code>forbid-click</code>控制是否禁止穿透点击。</p><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-snackbar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">:forbid-click</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span> 这是一个消息条！！<span class="hljs-tag">&lt;/<span class="hljs-name">var-snackbar</span>&gt;</span>\n</code></pre></div><div class="card"><h3>函数调用</h3><h4>基本使用</h4><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css">Snackbar(<span class="hljs-string">&#39;这是一个消息条！！&#39;</span>)\n</code></pre><h4>显示时长</h4><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css">Snackbar({\n <span class="hljs-attr">content</span>: <span class="hljs-string">&#39;这是一个消息条！！&#39;</span>,\n <span class="hljs-attr">duration</span>: <span class="hljs-number">1000</span>\n})\n</code></pre><h4>底部显示</h4><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css">Snackbar({\n <span class="hljs-attr">content</span>: <span class="hljs-string">&#39;这是一个消息条！！&#39;</span>,\n <span class="hljs-attr">position</span>: <span class="hljs-string">&#39;bottom&#39;</span>\n})\n</code></pre></div><div class="card"><h3>Snackbar 类型</h3><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css">Snackbar.success(<span class="hljs-string">&#39;这是一个消息条！！&#39;</span>)\nSnackbar.warning(<span class="hljs-string">&#39;这是一个消息条！！&#39;</span>)\nSnackbar.info(<span class="hljs-string">&#39;这是一个消息条！！&#39;</span>)\nSnackbar.error(<span class="hljs-string">&#39;这是一个消息条！！&#39;</span>)\nSnackbar.loading(<span class="hljs-string">&#39;这是一个消息条！！&#39;</span>)\n</code></pre></div><div class="card"><h3>单例模式</h3><p>使用函数式调用时，Snackbar 默认采用单例模式，即同一时间只会存在一个 Snackbar，如果需要在同一时间弹出多个 Snackbar，可以参考下面的示例</p><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css">Snackbar.allowMultiple(<span class="hljs-literal">true</span>)\n\n<span class="hljs-keyword">const</span> snackbar1 = Snackbar(<span class="hljs-string">&#39;第一个 Snackbar&#39;</span>);\n<span class="hljs-keyword">const</span> snackbar1 = Snackbar.success(<span class="hljs-string">&#39;第二个 Snackbar&#39;</span>);\n\nsnackbar1.clear();\nsnackbar1.clear();\n</code></pre></div><h2>API</h2><div class="card"><h3>属性</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>v-model:show</code></td><td>是否显示<code>Snackbar</code></td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td><code>type</code></td><td><code>Snackbar</code>类型，可选值为<code>success, warning, info, error, loading</code>之一</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>position</code></td><td><code>Snackbar</code>位置，可选值为<code>top, center, bottom</code>之一</td><td><em>string</em></td><td><code>top</code></td></tr><tr><td><code>duration</code></td><td>显示时长</td><td><em>number</em></td><td><code>3000</code></td></tr><tr><td><code>content</code></td><td>自定义内容</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>content-class</code></td><td>自定义内容的类名</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>vertical</code></td><td>是否启用竖直排列方式</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td><code>loading-type</code></td><td>加载动画类型(见<code>Loading</code>组件)</td><td><em>string</em></td><td><code>circle</code></td></tr><tr><td><code>loading-size</code></td><td>加载动画大小(见<code>Loading</code>组件)</td><td><em>string</em></td><td><code>normal</code></td></tr><tr><td><code>lock-scroll</code></td><td>是否禁止滚动穿透</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td><code>forbid-click</code></td><td>是否禁止穿透点击</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td><code>teleport</code></td><td>弹出层挂载的位置</td><td><em>string</em></td><td><code>body</code></td></tr></tbody></table></div><div class="card"><h3>事件</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td><code>open</code></td><td>打开<code>Snackbar</code>时触发</td><td><code>-</code></td></tr><tr><td><code>opened</code></td><td>打开<code>Snackbar</code>动画结束时触发</td><td><code>-</code></td></tr><tr><td><code>close</code></td><td>关闭<code>Snackbar</code>时触发</td><td><code>-</code></td></tr><tr><td><code>closed</code></td><td>关闭<code>Snackbar</code>动画结束时触发</td><td><code>-</code></td></tr></tbody></table></div><div class="card"><h3>插槽</h3><table><thead><tr><th>插槽名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td><code>default</code></td><td><code>Snackbar</code> 内容</td><td><code>-</code></td></tr><tr><td><code>action</code></td><td><code>Snackbar</code> 右边动作区</td><td><code>-</code></td></tr></tbody></table></div><div class="card"><h3>方法</h3><p>实例上的<code>clear</code>方法可关闭当前实例，全局<code>clear</code>方法可关闭所有的消息条。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td><code>Snackbar</code></td><td>显示消息条</td><td><em>options | string</em></td><td><code>snackbar 实例</code></td></tr><tr><td><code>Snackbar.success</code></td><td>显示成功消息条</td><td><em>options | string</em></td><td><code>snackbar 实例</code></td></tr><tr><td><code>Snackbar.info</code></td><td>显示普通消息条</td><td><em>options | string</em></td><td><code>snackbar 实例</code></td></tr><tr><td><code>Snackbar.warning</code></td><td>显示警告消息条</td><td><em>options | string</em></td><td><code>snackbar 实例</code></td></tr><tr><td><code>Snackbar.error</code></td><td>显示错误消息条</td><td><em>options | string</em></td><td><code>snackbar 实例</code></td></tr><tr><td><code>Snackbar.loading</code></td><td>显示加载消息条</td><td><em>options | string</em></td><td><code>snackbar 实例</code></td></tr><tr><td><code>Snackbar.clear</code></td><td>关闭消息条</td><td><em>-</em></td><td><code>-</code></td></tr><tr><td><code>Snackbar.allowMultiple</code></td><td>是否允许多例模式</td><td><em>boolean</em></td><td><code>-</code></td></tr></tbody></table></div><div class="card"><h3>Snackbar Options</h3><h4>函数式调用时传入的选项</h4><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>show</code></td><td>是否显示<code>Snackbar</code></td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td><code>type</code></td><td><code>Snackbar</code>类型，可选值为<code>success, warning, info, error, loading</code>之一</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>position</code></td><td><code>Snackbar</code>位置，可选值为<code>top, center, bottom</code>之一</td><td><em>string</em></td><td><code>top</code></td></tr><tr><td><code>duration</code></td><td>显示时长(当<code>type</code>属性为<code>loading</code>时，需要手动关闭)</td><td><em>number</em></td><td><code>3000</code></td></tr><tr><td><code>content</code></td><td>自定义内容</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>contentClass</code></td><td>自定义内容的类名</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>vertical</code></td><td>是否启用竖直排列方式</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td><code>loadingType</code></td><td>加载动画类型(见<code>Loading</code>组件)</td><td><em>string</em></td><td><code>circle</code></td></tr><tr><td><code>loadingSize</code></td><td>加载动画大小(见<code>Loading</code>组件)</td><td><em>string</em></td><td><code>normal</code></td></tr><tr><td><code>lockScroll</code></td><td>是否禁止滚动穿透</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td><code>forbidClick</code></td><td>是否禁止穿透点击(当<code>type</code>属性为<code>loading</code>时，默认为<code>true</code>)</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td><code>onOpen</code></td><td>打开<code>Snackbar</code>时触发</td><td><em>() =&gt; void</em></td><td><code>-</code></td></tr><tr><td><code>onOpened</code></td><td>打开<code>Snackbar</code>动画结束时触发</td><td><em>() =&gt; void</em></td><td><code>-</code></td></tr><tr><td><code>onClose</code></td><td>关闭<code>Snackbar</code>时触发</td><td><em>() =&gt; void</em></td><td><code>-</code></td></tr><tr><td><code>onClosed</code></td><td>关闭<code>Snackbar</code>动画结束时触发</td><td><em>() =&gt; void</em></td><td><code>-</code></td></tr></tbody></table></div><div class="card"><h3>样式变量</h3><p>以下为组件使用的 css 变量,可以使用<a href="#/zh-CN/style-provider">StyleProvider 组件</a>进行样式定制</p><table><thead><tr><th>变量名</th><th>默认值</th></tr></thead><tbody><tr><td><code>--snackbar-width</code></td><td><code>256px</code></td></tr><tr><td><code>--snackbar-color</code></td><td><code>rgba(255, 255, 255, .87)</code></td></tr><tr><td><code>--snackbar-border-radius</code></td><td><code>4px</code></td></tr><tr><td><code>--snackbar-background</code></td><td><code>#333</code></td></tr><tr><td><code>--snackbar-font-size</code></td><td><code>var(--font-size-md)</code></td></tr><tr><td><code>--snackbar-margin</code></td><td><code>6px 24px</code></td></tr><tr><td><code>--snackbar-border-color</code></td><td><code>currentColor</code></td></tr><tr><td><code>--snackbar-success-background</code></td><td><code>var(--color-success)</code></td></tr><tr><td><code>--snackbar-info-background</code></td><td><code>var(--color-info)</code></td></tr><tr><td><code>--snackbar-error-background</code></td><td><code>var(--color-danger)</code></td></tr><tr><td><code>--snackbar-warning-background</code></td><td><code>var(--color-warning)</code></td></tr><tr><td><code>--snackbar-content-padding</code></td><td><code>14px 16px</code></td></tr><tr><td><code>--snackbar-action-margin</code></td><td><code>0 16px 0 0</code></td></tr></tbody></table></div>',15)];var o={render:function(s,t){return(0,a.wg)(),(0,a.iD)("div",e,c)}}}}]);