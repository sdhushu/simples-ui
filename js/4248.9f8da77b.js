"use strict";(self.webpackChunksimples_ui=self.webpackChunksimples_ui||[]).push([[4248],{4248:(s,t,a)=>{a.r(t),a.d(t,{default:()=>c});var d=a(6252),e={class:"varlet-site-doc"},n=[(0,d.uE)('<h1>对话框</h1><div class="card"><h3>介绍</h3><p>弹出一个对话框展示内容并处理用户交互。 <code>Dialog</code>提供了函数式和组件式两种使用方式，两种使用效果和参数并没有本质区别。</p></div><div class="card"><h3>引入</h3><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> { Dialog } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;simples-ui&#39;</span>\n\ncreateApp().use(Dialog)\n</code></pre></div><div class="card"><h3>局部引入</h3><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-keyword">import</span> { Dialog } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;simples-ui&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">components</span>: {\n    [Dialog.Component.name]: Dialog\n  }\n}\n</code></pre></div><div class="card"><h3>函数调用</h3><h4>基本使用</h4><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css">Dialog(<span class="hljs-string">&#39;兰亭临帖 行书如行云流水&#39;</span>)\n</code></pre><h4>修改标题</h4><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css">Dialog({\n  <span class="hljs-attr">title</span>: <span class="hljs-string">&#39;兰亭序&#39;</span>,\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;兰亭临帖 行书如行云流水&#39;</span>,\n})\n</code></pre><h4>隐藏按钮</h4><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css">Dialog({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;兰亭临帖 行书如行云流水&#39;</span>,\n  <span class="hljs-attr">confirmButton</span>: <span class="hljs-literal">false</span>,\n  <span class="hljs-attr">cancelButton</span>: <span class="hljs-literal">false</span>,\n})\n</code></pre><h4>处理用户行为</h4><p>可以通过<code>Dialog</code>方法的返回值获取用户行为, 返回值是一个<code>promise</code>。 包含<code>confirm(确认)</code>、<code>cancel(取消)</code>、<code>close(通过点击遮罩层触发关闭)</code>三种状态。</p><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-keyword">import</span> { Snackbar } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;simples-ui&#39;</span>\n\n<span class="hljs-keyword">const</span> actions = {\n  <span class="hljs-attr">confirm</span>: <span class="hljs-function">() =&gt;</span> Snackbar.success(<span class="hljs-string">&#39;confirm&#39;</span>),\n  <span class="hljs-attr">cancel</span>: <span class="hljs-function">() =&gt;</span> Snackbar.error(<span class="hljs-string">&#39;cancel&#39;</span>),\n  <span class="hljs-attr">close</span>: <span class="hljs-function">() =&gt;</span> Snackbar.info(<span class="hljs-string">&#39;close&#39;</span>),\n}\n\nactions[<span class="hljs-keyword">await</span> Dialog(<span class="hljs-string">&#39;兰亭临帖 行书如行云流水&#39;</span>)]()\n</code></pre></div><div class="card"><h3>异步关闭</h3><p><code>Dialog</code>可以通过<code>onBeforeClose</code>进行关闭前的拦截，可以从参数中得到用户行为和触发关闭的回调函数。</p><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-keyword">import</span> { Snackbar } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@varlet/ui&#39;</span>\n\n<span class="hljs-keyword">const</span> actions = {\n  <span class="hljs-attr">confirm</span>: <span class="hljs-function">() =&gt;</span> Snackbar.success(<span class="hljs-string">&#39;confirm&#39;</span>),\n  <span class="hljs-attr">cancel</span>: <span class="hljs-function">() =&gt;</span> Snackbar.error(<span class="hljs-string">&#39;cancel&#39;</span>),\n  <span class="hljs-attr">close</span>: <span class="hljs-function">() =&gt;</span> Snackbar.info(<span class="hljs-string">&#39;close&#39;</span>),\n}\n\n<span class="hljs-keyword">const</span> onBeforeClose = <span class="hljs-function">(<span class="hljs-params">action, done</span>) =&gt;</span> {\n  Snackbar.loading(<span class="hljs-string">&#39;正在异步关闭&#39;</span>)\n  \n  <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n    actions[action]()\n    done()\n  }, <span class="hljs-number">1000</span>)\n}\n\nDialog({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;兰亭临帖 行书如行云流水&#39;</span>,\n  onBeforeClose\n})\n</code></pre></div><div class="card"><h3>组件调用</h3><h4>基本使用</h4><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span> <span class="hljs-attr">block</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span>&gt;</span>基本使用<span class="hljs-tag">&lt;/<span class="hljs-name">var-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">var-dialog</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;兰亭序&quot;</span>\n  <span class="hljs-attr">message</span>=<span class="hljs-string">&quot;兰亭临帖 行书如行云流水&quot;</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;() =&gt; Snackbar.success(&#39;confirm&#39;)&quot;</span>\n  @<span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;() =&gt; Snackbar.error(&#39;cancel&#39;)&quot;</span>\n  @<span class="hljs-attr">closed</span>=<span class="hljs-string">&quot;() =&gt; Snackbar.info(&#39;closed&#39;)&quot;</span>\n/&gt;</span>\n</code></pre><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> { Snackbar } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@varlet/ui&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> show = ref(<span class="hljs-literal">false</span>)\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      Snackbar,\n    }\n  }\n}\n</code></pre><h4>异步关闭</h4><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span> <span class="hljs-attr">block</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span>&gt;</span>异步关闭<span class="hljs-tag">&lt;/<span class="hljs-name">var-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">var-dialog</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;兰亭序&quot;</span>\n  <span class="hljs-attr">message</span>=<span class="hljs-string">&quot;兰亭临帖 行书如行云流水&quot;</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  @<span class="hljs-attr">before-close</span>=<span class="hljs-string">&quot;onBeforeClose&quot;</span>\n/&gt;</span>\n</code></pre><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> { Snackbar } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@varlet/ui&#39;</span>\n\n<span class="hljs-keyword">const</span> actions = {\n  <span class="hljs-attr">confirm</span>: <span class="hljs-function">() =&gt;</span> Snackbar.success(<span class="hljs-string">&#39;confirm&#39;</span>),\n  <span class="hljs-attr">cancel</span>: <span class="hljs-function">() =&gt;</span> Snackbar.error(<span class="hljs-string">&#39;cancel&#39;</span>),\n  <span class="hljs-attr">close</span>: <span class="hljs-function">() =&gt;</span> Snackbar.info(<span class="hljs-string">&#39;close&#39;</span>),\n}\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> show = ref(<span class="hljs-literal">false</span>)\n\n    <span class="hljs-keyword">const</span> onBeforeClose = <span class="hljs-function">(<span class="hljs-params">action, done</span>) =&gt;</span> {\n      Snackbar.loading(<span class="hljs-string">&#39;正在异步关闭&#39;</span>)\n\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        actions[action]()\n        done()\n      }, <span class="hljs-number">1000</span>)\n    }\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      Snackbar,\n      onBeforeClose,\n    }\n  }\n}\n</code></pre><h4>自定义插槽</h4><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span> <span class="hljs-attr">block</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span>&gt;</span>自定义插槽<span class="hljs-tag">&lt;/<span class="hljs-name">var-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">var-dialog</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">title</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">var-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;information&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#2979ff&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">var-cell</span>&gt;</span>兰亭临帖 行书如行云流水<span class="hljs-tag">&lt;/<span class="hljs-name">var-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">var-cell</span>&gt;</span>兰亭临帖 行书如行云流水<span class="hljs-tag">&lt;/<span class="hljs-name">var-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">var-cell</span>&gt;</span>兰亭临帖 行书如行云流水<span class="hljs-tag">&lt;/<span class="hljs-name">var-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">var-dialog</span>&gt;</span>\n</code></pre><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> show = ref(<span class="hljs-literal">false</span>)\n\n    <span class="hljs-keyword">return</span> { show }\n  }\n}\n</code></pre></div><h2>API</h2><div class="card"><h3>属性</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>v-model:show</code></td><td>是否显示对话框</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td><code>title</code></td><td>对话框标题</td><td><em>string</em></td><td><code>提示</code></td></tr><tr><td><code>message</code></td><td>对话框内容</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>message-align</code></td><td>对话框内容文字对齐方式，可选值 <code>center</code>, <code>left</code>, <code>right</code></td><td><em>string</em></td><td><code>left</code></td></tr><tr><td><code>confirm-button</code></td><td>是否显示确认按钮</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td><code>cancel-button</code></td><td>是否显示取消按钮</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td><code>confirm-button-text</code></td><td>确认按钮文字</td><td><em>string</em></td><td><code>确认</code></td></tr><tr><td><code>cancel-button-text</code></td><td>取消按钮文字</td><td><em>string</em></td><td><code>取消</code></td></tr><tr><td><code>confirm-button-text-color</code></td><td>确认按钮文字颜色</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>cancel-button-text-color</code></td><td>取消按钮文字颜色</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>confirm-button-color</code></td><td>确认按钮背景颜色</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>cancel-button-color</code></td><td>取消按钮背景颜色</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>overlay</code></td><td>是否显示遮罩层</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td><code>overlay-class</code></td><td>自定义遮罩层的class</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>overlay-style</code></td><td>自定义遮罩层的style</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>lock-scroll</code></td><td>是否禁止滚动穿透，禁止时滚动弹出层不会引发body的滚动</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td><code>close-on-click-overlay</code></td><td>是否点击遮罩层关闭弹出层</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td><code>teleport</code></td><td>弹出层挂载的位置</td><td><em>string</em></td><td><code>-</code></td></tr></tbody></table></div><div class="card"><h3>事件</h3><table><thead><tr><th>事件名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td><code>open</code></td><td>打开对话框时触发</td><td><code>-</code></td></tr><tr><td><code>opened</code></td><td>打开对话框动画结束时触发</td><td><code>-</code></td></tr><tr><td><code>before-close</code></td><td>对话框关闭前触发，会阻止关闭</td><td><code>action: confirm | cancel | close, done: Function</code></td></tr><tr><td><code>close</code></td><td>关闭对话框时触发</td><td><code>-</code></td></tr><tr><td><code>closed</code></td><td>关闭对话框动画结束时触发</td><td><code>-</code></td></tr><tr><td><code>confirm</code></td><td>确认时触发</td><td><code>-</code></td></tr><tr><td><code>cancel</code></td><td>取消时触发</td><td><code>-</code></td></tr><tr><td><code>click-overlay</code></td><td>点击遮罩层时触发</td><td><code>-</code></td></tr></tbody></table></div><div class="card"><h3>Dialog Options</h3><h4>函数式调用时传入的选项</h4><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>title</code></td><td>对话框标题</td><td><em>string</em></td><td><code>提示</code></td></tr><tr><td><code>message</code></td><td>对话框内容</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>messageAlign</code></td><td>对话框内容文字对齐方式，可选值 <code>center</code> <code>left</code> <code>right</code></td><td><em>string</em></td><td><code>left</code></td></tr><tr><td><code>confirmButton</code></td><td>是否显示确认按钮</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td><code>cancelButton</code></td><td>是否显示取消按钮</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td><code>confirmButtonText</code></td><td>确认按钮文字</td><td><em>string</em></td><td><code>确认</code></td></tr><tr><td><code>cancelButtonText</code></td><td>取消按钮文字</td><td><em>string</em></td><td><code>取消</code></td></tr><tr><td><code>confirmButtonTextColor</code></td><td>确认按钮文字颜色</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>cancelButtonTextColor</code></td><td>取消按钮文字颜色</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>confirmButtonColor</code></td><td>确认按钮背景颜色</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>cancelButtonColor</code></td><td>取消按钮背景颜色</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>overlay</code></td><td>是否显示遮罩层</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td><code>overlayClass</code></td><td>自定义遮罩层的class</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>overlayStyle</code></td><td>自定义遮罩层的style</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>lockScroll</code></td><td>是否禁止滚动穿透，禁止时滚动弹出层不会引发body的滚动</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td><code>closeOnClickOverlay</code></td><td>是否点击遮罩层关闭弹出层</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td><code>onOpen</code></td><td>对话框开启回调</td><td><em>() =&gt; void</em></td><td><code>-</code></td></tr><tr><td><code>onOpened</code></td><td>对话框开启动画结束回调</td><td><em>() =&gt; void</em></td><td><code>-</code></td></tr><tr><td><code>onBeforeClose</code></td><td>对话框关闭前回调，会阻止关闭</td><td><em>(action: confirm | cancel | close, done: Function) =&gt; void</em></td><td><code>-</code></td></tr><tr><td><code>onClose</code></td><td>对话框关闭回调</td><td><em>() =&gt; void</em></td><td><code>-</code></td></tr><tr><td><code>onClosed</code></td><td>对话框关闭动画结束回调</td><td><em>() =&gt; void</em></td><td><code>-</code></td></tr><tr><td><code>onConfirm</code></td><td>确认回调</td><td><em>() =&gt; void</em></td><td><code>-</code></td></tr><tr><td><code>onCancel</code></td><td>取消回调</td><td><em>() =&gt; void</em></td><td><code>-</code></td></tr><tr><td><code>onClickOverlay</code></td><td>遮罩层点击回调</td><td><em>() =&gt; void</em></td><td><code>-</code></td></tr></tbody></table></div><div class="card"><h3>插槽</h3><table><thead><tr><th>插槽名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td><code>default</code></td><td>对话框主要内容</td><td><code>-</code></td></tr><tr><td><code>title</code></td><td>对话框标题</td><td><code>-</code></td></tr></tbody></table></div><div class="card"><h3>样式变量</h3><p>以下为组件使用的css变量,可以使用<a href="#/zh-CN/style-provider">StyleProvider组件</a>进行样式定制</p><table><thead><tr><th>变量名</th><th>默认值</th></tr></thead><tbody><tr><td><code>--dialog-width</code></td><td><code>280px</code></td></tr><tr><td><code>--dialog-background</code></td><td><code>#fff</code></td></tr><tr><td><code>--dialog-border-radius</code></td><td><code>2px</code></td></tr><tr><td><code>--dialog-title-padding</code></td><td><code>20px 20px 0</code></td></tr><tr><td><code>--dialog-title-font-size</code></td><td><code>var(--font-size-lg)</code></td></tr><tr><td><code>--dialog-message-color</code></td><td><code>#888</code></td></tr><tr><td><code>--dialog-message-padding</code></td><td><code>12px 20px</code></td></tr><tr><td><code>--dialog-message-line-height</code></td><td><code>24px</code></td></tr><tr><td><code>--dialog-message-font-size</code></td><td><code>var(--font-size-md)</code></td></tr><tr><td><code>--dialog-actions-padding</code></td><td><code>0 12px 12px</code></td></tr><tr><td><code>--dialog-button-margin-left</code></td><td><code>6px</code></td></tr><tr><td><code>--dialog-confirm-button-color</code></td><td><code>var(--color-primary)</code></td></tr><tr><td><code>--dialog-cancel-button-color</code></td><td><code>var(--color-primary)</code></td></tr></tbody></table></div>',13)];var c={render:function(s,t){return(0,d.wg)(),(0,d.iD)("div",e,n)}}}}]);